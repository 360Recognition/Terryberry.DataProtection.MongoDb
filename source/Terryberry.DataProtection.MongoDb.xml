<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Terryberry.DataProtection.MongoDb</name>
    </assembly>
    <members>
        <member name="T:Terryberry.DataProtection.MongoDb.MongoDbDataProtectionBuilderExtensions">
            <summary>
            Contains MongoDb-specific extension methods for modifying a <see cref="T:Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder"/>.
            </summary>
        </member>
        <member name="M:Terryberry.DataProtection.MongoDb.MongoDbDataProtectionBuilderExtensions.PersistKeysToMongoDb(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.String,System.String,System.String)">
            <summary>
            Configures the data protection system to persist keys to the specified database and collection in MongoDb.
            </summary>
            <param name="builder">The builder instance to modify.</param>
            <param name="connectionString">MongoDb connection url.</param>
            <param name="databaseName">Database used to store the key list.</param>
            <param name="collectionName">Collection used to store the key list.</param>
            <returns>A reference to the <see cref="T:Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder"/> after this operation has completed.</returns>
        </member>
        <member name="M:Terryberry.DataProtection.MongoDb.MongoDbDataProtectionBuilderExtensions.PersistKeysToMongoDb(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,MongoDB.Driver.IMongoDatabase,System.String)">
            <summary>
            Configures the data protection system to persist keys to the specified database and collection in MongoDb.
            </summary>
            <param name="builder">The builder instance to modify.</param>
            <param name="database">Database used to store the key list.</param>
            <param name="collectionName">Collection used to store the key list.</param>
            <returns>A reference to the <see cref="T:Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder"/> after this operation has completed.</returns>
        </member>
        <member name="M:Terryberry.DataProtection.MongoDb.MongoDbDataProtectionBuilderExtensions.PersistKeysToMongoDb(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,MongoDB.Driver.IMongoCollection{Terryberry.DataProtection.MongoDb.MongoDbXmlKey})">
            <summary>
            Configures the data protection system to persist keys to the specified database and collection in MongoDb.
            </summary>
            <param name="builder">The builder instance to modify.</param>
            <param name="collection">Collection used to store the key list.</param>
            <returns>A reference to the <see cref="T:Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder"/> after this operation has completed.</returns>
        </member>
        <member name="M:Terryberry.DataProtection.MongoDb.MongoDbDataProtectionBuilderExtensions.AddKeyCleanup(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder)">
            <summary>
            Removes keys from the MongoDb repository after they expire or are revoked.
            </summary>
            <param name="builder">The builder instance to modify.</param>
            <returns>A reference to the <see cref="T:Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder"/> after this operation has completed.</returns>
            <exception cref="T:System.InvalidOperationException">PersistKeysToMongoDb must be called before this method.</exception>
            <remarks>
            Cleanup will run after this method is called, and whenever the key manager calls <see cref="M:Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.StoreElement(System.Xml.Linq.XElement,System.String)"/>.
            </remarks>
            <remarks>
            If a custom key manager is used, it must be configured before calling this method and keys must have an "id" attribute on the top level element.
            </remarks>
        </member>
        <member name="T:Terryberry.DataProtection.MongoDb.MongoDbXmlKey">
            <summary>
            Wraps the xml key in an object that can be stored in MongoDb.
            </summary>
        </member>
        <member name="P:Terryberry.DataProtection.MongoDb.MongoDbXmlKey.Id">
            <summary>
            MongoDb _id field.
            </summary>
        </member>
        <member name="P:Terryberry.DataProtection.MongoDb.MongoDbXmlKey.Key">
            <summary>
            The key xml in string form.
            </summary>
        </member>
        <member name="P:Terryberry.DataProtection.MongoDb.MongoDbXmlKey.KeyId">
            <summary>
            The id from the xml key.
            </summary>
        </member>
        <member name="P:Terryberry.DataProtection.MongoDb.MongoDbXmlKey.XmlKey">
            <summary>
            The key as an <see cref="T:System.Xml.Linq.XElement"/>.
            </summary>
        </member>
        <member name="T:Terryberry.DataProtection.MongoDb.MongoDbXmlRepository">
            <summary>
            An xml repository backed by MongoDb.
            </summary>
        </member>
        <member name="F:Terryberry.DataProtection.MongoDb.MongoDbXmlRepository._keys">
            <summary>
            The collection to store keys in.
            </summary>
        </member>
        <member name="F:Terryberry.DataProtection.MongoDb.MongoDbXmlRepository._keyManager">
            <summary>
            The key manager this app uses.
            </summary>
        </member>
        <member name="F:Terryberry.DataProtection.MongoDb.MongoDbXmlRepository.Id">
            <summary>
            The name of the id attribute on the keys.
            </summary>
        </member>
        <member name="M:Terryberry.DataProtection.MongoDb.MongoDbXmlRepository.#ctor(MongoDB.Driver.IMongoCollection{Terryberry.DataProtection.MongoDb.MongoDbXmlKey})">
            <summary>
            Initializes a <see cref="T:Terryberry.DataProtection.MongoDb.MongoDbXmlRepository"/> with keys stored in the specified MongoDb collection.
            </summary>
            <param name="keys">Collection used to store the keys.</param>
        </member>
        <member name="M:Terryberry.DataProtection.MongoDb.MongoDbXmlRepository.SetKeyManager(Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyManager)">
            <summary>
            Sets the key manager for cleanup.
            </summary>
        </member>
        <member name="M:Terryberry.DataProtection.MongoDb.MongoDbXmlRepository.RemoveRevokedKeys">
            <summary>
            Removes expired and revoked keys from the repository.
            </summary>
        </member>
        <member name="M:Terryberry.DataProtection.MongoDb.MongoDbXmlRepository.GetAllElements">
            <summary>
            Gets all top-level XML elements in the repository.
            </summary>
        </member>
        <member name="M:Terryberry.DataProtection.MongoDb.MongoDbXmlRepository.StoreElement(System.Xml.Linq.XElement,System.String)">
            <summary>
            Adds a top-level XML element to the repository.
            </summary>
            <param name="element">The element to add.</param>
            <param name="friendlyName">A friendly name provided by the key mananger. Not used in this method.</param>
        </member>
    </members>
</doc>
